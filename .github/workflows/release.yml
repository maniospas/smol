name: Build and Release Smolang

on:
  push:
    tags:
      - 'v*'  # Triggers only on version tags like v1.0

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Build executable (Linux)
        run: |
          make

      - name: Prepare release artifacts
        run: |
          mkdir release-linux
          cp smol release-linux/
          cp -r std release-linux/

      - name: Upload artifacts (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: smol-linux
          path: release-linux/

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          install: >-
            mingw-w64-x86_64-gcc
            make
          update: true

      - name: Build executable (Windows)
        shell: msys2 {0}
        run: |
          make

      - name: Prepare release artifacts
        shell: msys2 {0}
        run: |
          mkdir -p release-windows/std
          cp smol.exe release-windows/
          cp -r std/* release-windows/std/

      - name: Upload artifacts (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: smol-windows
          path: release-windows/

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Build executable (macOS)
        run: |
          make

      - name: Prepare release artifacts
        run: |
          mkdir release-macos
          cp smol release-macos/
          cp -r std release-macos/

      - name: Upload artifacts (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: smol-macos
          path: release-macos/

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: smol-linux
          path: smol-linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: smol-windows
          path: smol-windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: smol-macos
          path: smol-macos

      - name: Create release archive
        run: |
          zip -r smol-linux.zip smol-linux
          zip -r smol-windows.zip smol-windows
          zip -r smol-macos.zip smol-macos

      - name: Generate changelog from commits since last tag
        id: changelog
        run: |
          current_tag="${GITHUB_REF##*/}"
          latest_tag=$(git describe --tags --abbrev=0 HEAD^)

          # Parse semver numbers
          IFS='.' read -r cur_major cur_minor cur_patch <<<"${current_tag#v}"
          IFS='.' read -r old_major old_minor old_patch <<<"${latest_tag#v}"

          # Decide title
          if [[ "$cur_major" == "$old_major" && "$cur_minor" == "$old_minor" ]]; then
            title="### 🐛 Bugfixes"
          else
            title="### ⚡ Updates"
          fi

          echo "Generating changelog from $latest_tag to $current_tag"

          changelog=$(git log ${latest_tag}..HEAD --pretty=format:"- %s")
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo -e "$title\n\n$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            smol-linux.zip
            smol-windows.zip
            smol-macos.zip
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
