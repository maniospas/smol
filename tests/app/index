	.file	"<stdin>"
	.intel_syntax noprefix
	.text
	.section	.rodata._Z9main__785Pv.str1.1,"aMS",@progbits,1
.LC0:
	.string	""
.LC1:
	.string	"I think."
.LC2:
	.string	"Therefore I am."
.LC3:
	.string	"%.*s\n"
.LC4:
	.string	"Buffer index out of range\n"
.LC5:
	.string	" "
.LC6:
	.string	"Failed an Arena allocation"
.LC7:
	.string	"%s\n"
.LC8:
	.string	"Buffer error \n"
	.section	.text._Z9main__785Pv,"ax",@progbits
	.p2align 4
	.globl	_Z9main__785Pv
	.type	_Z9main__785Pv, @function
_Z9main__785Pv:
.LFB97:
	.cfi_startproc
	endbr64
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	esi, 24
	mov	rbp, rsp
	.cfi_def_cfa_register 6
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	mov	rbx, QWORD PTR fs:40
	mov	QWORD PTR -56[rbp], rbx
	mov	rbx, rdi
	mov	edi, 1
	call	calloc@PLT
	test	rax, rax
	je	.L2
	mov	r13, QWORD PTR 16[rax]
	mov	r14, QWORD PTR 8[rax]
	mov	r15, rax
	mov	rdx, r13
	btr	rdx, 63
	cmp	r14, rdx
	jb	.L3
	test	r13, r13
	js	.L4
	mov	rax, rdx
	shr	rax, 2
	lea	r13, 1[rax+rdx]
	mov	rsi, r13
	sal	rsi, 5
	test	r14, r14
	je	.L5
	mov	rdi, QWORD PTR [r15]
	call	realloc@PLT
.L6:
	mov	QWORD PTR [r15], rax
	mov	QWORD PTR 16[r15], r13
	test	rax, rax
	je	.L4
	mov	rdx, r13
	btr	rdx, 63
.L7:
	mov	r12, r14
	lea	rcx, 1[r14]
	lea	rdi, .LC1[rip]
	sal	r12, 5
	mov	QWORD PTR 8[r15], rcx
	mov	QWORD PTR [rax+r12], rdi
	mov	QWORD PTR 8[rax+r12], 8
	mov	BYTE PTR 16[rax+r12], 73
	mov	QWORD PTR 24[rax+r12], 0
	cmp	rcx, rdx
	jb	.L8
	test	r13, r13
	js	.L9
	mov	rax, rdx
	shr	rax, 2
	lea	r13, 1[rdx+rax]
	mov	rsi, r13
	sal	rsi, 5
	test	rcx, rcx
	jne	.L37
	mov	rdi, rsi
	call	malloc@PLT
.L11:
	mov	QWORD PTR [r15], rax
	mov	QWORD PTR 16[r15], r13
	test	rax, rax
	jne	.L12
.L9:
	lea	rsi, .LC8[rip]
	mov	edi, 2
	xor	eax, eax
	call	__printf_chk@PLT
.L19:
	cmp	QWORD PTR 16[r15], 0
	mov	r12d, 2
	je	.L26
	jmp	.L24
	.p2align 4,,10
	.p2align 3
.L4:
	lea	rsi, .LC8[rip]
	mov	edi, 2
	xor	eax, eax
	mov	r12d, 2
	call	__printf_chk@PLT
.L24:
	mov	rdi, QWORD PTR [r15]
	call	free@PLT
.L26:
	mov	rdi, r15
	call	free@PLT
.L25:
	mov	DWORD PTR [rbx], r12d
	mov	rax, QWORD PTR -56[rbp]
	sub	rax, QWORD PTR fs:40
	jne	.L38
	lea	rsp, -40[rbp]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	.cfi_remember_state
	.cfi_def_cfa 7, 8
	ret
	.p2align 4,,10
	.p2align 3
.L3:
	.cfi_restore_state
	mov	rax, QWORD PTR [rax]
	jmp	.L7
	.p2align 4,,10
	.p2align 3
.L5:
	mov	rdi, rsi
	call	malloc@PLT
	jmp	.L6
	.p2align 4,,10
	.p2align 3
.L8:
	mov	rax, QWORD PTR [r15]
.L12:
	lea	rdi, .LC2[rip]
	mov	BYTE PTR 48[rax+r12], 84
	lea	rdx, 2[r14]
	mov	QWORD PTR 32[rax+r12], rdi
	mov	QWORD PTR 40[rax+r12], 15
	mov	QWORD PTR 56[rax+r12], 0
	mov	rax, rsp
	mov	QWORD PTR 8[r15], rdx
	cmp	rsp, rax
	je	.L14
.L39:
	sub	rsp, 4096
	or	QWORD PTR 4088[rsp], 0
	cmp	rsp, rax
	jne	.L39
.L14:
	sub	rsp, 1040
	or	QWORD PTR 1032[rsp], 0
	lea	rax, 15[rsp]
	and	rax, -16
	mov	QWORD PTR -96[rbp], rax
	test	rdx, rdx
	je	.L40
	mov	rax, QWORD PTR [r15]
	xor	r13d, r13d
	mov	QWORD PTR -128[rbp], rdx
	mov	QWORD PTR -72[rbp], 1
	mov	QWORD PTR -88[rbp], rax
	lea	rax, 3[r14]
	mov	r14, r13
	mov	QWORD PTR -136[rbp], rax
	lea	rax, .LC0[rip]
	mov	QWORD PTR -104[rbp], rax
	mov	QWORD PTR -144[rbp], r15
	mov	QWORD PTR -152[rbp], rbx
	jmp	.L18
	.p2align 4,,10
	.p2align 3
.L28:
	mov	QWORD PTR -104[rbp], r15
	mov	r14, r9
.L18:
	mov	rax, QWORD PTR -88[rbp]
	mov	r15, QWORD PTR 8[rax]
	mov	rsi, QWORD PTR [rax]
	lea	rbx, 2[r13+r15]
	lea	rax, 1[r15]
	mov	QWORD PTR -80[rbp], rax
	cmp	rbx, 1024
	ja	.L20
	mov	rdx, QWORD PTR -96[rbp]
	mov	ecx, 1024
	sub	rcx, r13
	lea	r12, [rdx+r13]
	mov	rdx, r15
	mov	QWORD PTR -112[rbp], rcx
	mov	rdi, r12
	call	__memcpy_chk@PLT
	lea	rax, 0[r13+r15]
	mov	edx, 1024
	mov	rcx, QWORD PTR -112[rbp]
	cmp	rax, rdx
	lea	rdi, [r12+r15]
	lea	rsi, .LC5[rip]
	cmovb	rax, rdx
	sub	rcx, r15
	mov	edx, 1
	lea	rcx, -1024[rcx+rax]
	call	__memcpy_chk@PLT
	mov	rax, QWORD PTR -80[rbp]
	mov	BYTE PTR 1[r12+r15], 0
	mov	r8d, 1024
	lea	r9, [rax+r14]
	lea	r13, 1[rbx+r9]
	cmp	r13, 1024
	ja	.L20
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, r8
	mov	rsi, QWORD PTR -104[rbp]
	mov	rdx, r14
	sub	rcx, rbx
	mov	QWORD PTR -120[rbp], r9
	lea	r15, [rax+rbx]
	mov	QWORD PTR -112[rbp], rcx
	add	rbx, r14
	mov	rdi, r15
	call	__memcpy_chk@PLT
	mov	rcx, QWORD PTR -112[rbp]
	mov	rdx, QWORD PTR -80[rbp]
	mov	rsi, r12
	mov	eax, 1024
	lea	rdi, [r15+r14]
	cmp	rbx, rcx
	cmovb	rbx, rcx
	cmp	rbx, rax
	cmovb	rbx, rax
	sub	rcx, r14
	lea	rcx, -1024[rbx+rcx]
	call	__memcpy_chk@PLT
	mov	r9, QWORD PTR -120[rbp]
	add	QWORD PTR -72[rbp], 1
	mov	rax, QWORD PTR -72[rbp]
	mov	BYTE PTR [r15+r9], 0
	cmp	QWORD PTR -128[rbp], rax
	jb	.L41
	add	QWORD PTR -88[rbp], 32
	mov	rsi, QWORD PTR -136[rbp]
	cmp	QWORD PTR -72[rbp], rsi
	jne	.L28
	lea	rsi, .LC4[rip]
	mov	edi, 2
	xor	eax, eax
	mov	r15, QWORD PTR -144[rbp]
	mov	rbx, QWORD PTR -152[rbp]
	call	__printf_chk@PLT
	jmp	.L19
	.p2align 4,,10
	.p2align 3
.L37:
	mov	rdi, QWORD PTR [r15]
	call	realloc@PLT
	jmp	.L11
	.p2align 4,,10
	.p2align 3
.L20:
	mov	r15, QWORD PTR -144[rbp]
	xor	eax, eax
	lea	rdx, .LC6[rip]
	lea	rsi, .LC7[rip]
	mov	edi, 2
	mov	rbx, QWORD PTR -152[rbp]
	mov	r12d, 1
	call	__printf_chk@PLT
	cmp	QWORD PTR 16[r15], 0
	je	.L26
	jmp	.L24
	.p2align 4,,10
	.p2align 3
.L41:
	mov	r14, r15
	mov	rbx, QWORD PTR -152[rbp]
	mov	r15, QWORD PTR -144[rbp]
	mov	edx, r9d
.L23:
	xor	eax, eax
	mov	rcx, r14
	lea	rsi, .LC3[rip]
	xor	r12d, r12d
	mov	edi, 2
	call	__printf_chk@PLT
	cmp	QWORD PTR 16[r15], 0
	je	.L26
	jmp	.L24
.L40:
	lea	r14, .LC0[rip]
	jmp	.L23
.L38:
	call	__stack_chk_fail@PLT
.L2:
	lea	rsi, .LC8[rip]
	mov	edi, 2
	xor	eax, eax
	mov	r12d, 2
	call	__printf_chk@PLT
	jmp	.L25
	.cfi_endproc
.LFE97:
	.size	_Z9main__785Pv, .-_Z9main__785Pv
	.section	.rodata.main.str1.8,"aMS",@progbits,1
	.align 8
.LC9:
	.string	"Compiler: smo\316\273 (https://github.com/maniospas/smol)\nThreads: 1 (single threaded mode)\n"
	.section	.text.startup.main,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LFB98:
	.cfi_startproc
	endbr64
	sub	rsp, 24
	.cfi_def_cfa_offset 32
	lea	rsi, .LC9[rip]
	mov	edi, 2
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR 8[rsp], rax
	xor	eax, eax
	call	__printf_chk@PLT
	lea	rdi, 4[rsp]
	call	_Z9main__785Pv
	mov	eax, DWORD PTR 4[rsp]
	mov	rdx, QWORD PTR 8[rsp]
	sub	rdx, QWORD PTR fs:40
	jne	.L45
	add	rsp, 24
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L45:
	.cfi_restore_state
	call	__stack_chk_fail@PLT
	.cfi_endproc
.LFE98:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 14.2.0-19ubuntu2) 14.2.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
